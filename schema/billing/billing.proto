syntax = "proto3";

package billing;

import "base/user_billing.proto";

enum CheckoutMode {
  CHECKOUT_MODE_UNSPECIFIED = 0;
  CHECKOUT_MODE_REDIRECT = 1;
  CHECKOUT_MODE_EMBEDDED = 2;
}

message CreateCheckoutSessionRequest {
  string user_id = 1;
  int32 amount_in_cents = 2;
  PaymentType payment_type = 3;
  string success_url = 4;
  string cancel_url = 5;
  CheckoutMode mode = 6;
}

message CreateCheckoutSessionResponse {
  string checkout_url = 1;
  optional string client_secret = 2;
}

message CancelSubscriptionRequest {}

message CancelSubscriptionResponse { bool success = 1; }

message SyncStripeDataRequest { string customer_id = 1; }

message SyncStripeDataResponse { SubscriptionData subscription_data = 1; }

message SubscriptionData {
  string status = 1;
  optional int64 current_period_start = 2;
  optional int64 current_period_end = 3;
  optional string subscription_id = 4;
  optional string price_id = 5;
  optional bool cancel_at_period_end = 6;
  optional PaymentMethodData payment_method = 7;
}

message PaymentMethodData {
  string brand = 1;
  string last4 = 2;
}

enum PaymentType {
  PAYMENT_TYPE_UNSPECIFIED = 0;
  PAYMENT_TYPE_SUBSCRIPTION = 1;
  PAYMENT_TYPE_ONE_TIME = 2;
}

message GetOrCreateCustomerRequest { string user_id = 1; }

message GetOrCreateCustomerResponse { string customer_id = 1; }

message CreatePaymentIntentRequest {
  string user_id = 1;
  int32 amount_in_cents = 2;
  PaymentType payment_type = 3;
}

message CreatePaymentIntentResponse {
  string client_secret = 1;
  string ephemeral_key = 2;
  string customer_id = 3;
}

message CreateSubscriptionRequest {
  string user_id = 1;
  string price_id = 2;
}

message CreateSubscriptionResponse {
  string subscription_id = 1;
  string client_secret = 2;
  string customer_id = 3;
}

message CreateStripeSetupIntentRequest { string user_id = 1; }

message CreateStripeSetupIntentResponse {
  string client_secret = 1;
  string customer_id = 2;
}

message PaymentMethodDetails {
  string brand = 1;
  string last4 = 2;
  int32 expiry_month = 3;
  int32 expiry_year = 4;
}

message RefreshCustomerPaymentStatusRequest { string user_id = 1; }

message RefreshCustomerPaymentStatusResponse {
  base.PaymentMethodStatus status = 1;
  repeated PaymentMethodDetails payment_methods = 2;
}

service BillingService {
  rpc CreateCheckoutSession(CreateCheckoutSessionRequest)
      returns (CreateCheckoutSessionResponse);
  rpc CancelSubscription(CancelSubscriptionRequest)
      returns (CancelSubscriptionResponse);
  rpc SyncStripeData(SyncStripeDataRequest) returns (SyncStripeDataResponse);
  rpc GetOrCreateCustomer(GetOrCreateCustomerRequest)
      returns (GetOrCreateCustomerResponse);
  rpc CreatePaymentIntent(CreatePaymentIntentRequest)
      returns (CreatePaymentIntentResponse);
  rpc CreateSubscription(CreateSubscriptionRequest)
      returns (CreateSubscriptionResponse);
  rpc CreateStripeSetupIntent(CreateStripeSetupIntentRequest)
      returns (CreateStripeSetupIntentResponse);
  rpc GetStripeConfig(GetStripeConfigRequest) returns (GetStripeConfigResponse);
  rpc RefreshCustomerPaymentStatus(RefreshCustomerPaymentStatusRequest)
      returns (RefreshCustomerPaymentStatusResponse);
}

message GetStripeConfigRequest {}

message GetStripeConfigResponse {
  string publishable_key = 1;
  string merchant_id = 2;
  string subscription_price_id = 3;
}
